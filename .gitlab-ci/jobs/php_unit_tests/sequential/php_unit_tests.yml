.mysql-template:
  services:
    - name: $DATABASE_ENGINE_VERSION
      command:
        - /bin/bash
        - -c
        - |
          mount -t tmpfs -o size=1024m tmpfs /var/lib/mysql
          docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password --log-bin-trust-function-creators=1
  # MySQL services variables
  variables:
    MYSQL_USER: user
    MYSQL_PASSWORD: testing-password
    MYSQL_ROOT_PASSWORD: testing-password2
    MYSQL_DATABASE: test
    DATASOURCES_DEFAULT_DATABASE: non_existing_database # to ensure that all tests run on the test datasource
    DATASOURCES_DEFAULT_USERNAME: $MYSQL_USER
    DATASOURCES_DEFAULT_PASSWORD: $MYSQL_PASSWORD
    DATASOURCES_DEFAULT_HOST: 127.0.0.1
    DATASOURCES_TEST_DATABASE: $MYSQL_DATABASE
    DATASOURCES_TEST_USERNAME: $MYSQL_USER
    DATASOURCES_TEST_PASSWORD: $MYSQL_PASSWORD
    DATASOURCES_TEST_HOST: 127.0.0.1
  before_script:
    - mysql --version
    - while ! mysqladmin -u root -h $DATASOURCES_DEFAULT_HOST -p$MYSQL_ROOT_PASSWORD ping; do sleep 1; done
    - mysql -h $DATASOURCES_DEFAULT_HOST -u root -p$MYSQL_ROOT_PASSWORD -e "ALTER USER '$DATASOURCES_TEST_USERNAME'@'%' identified by '$DATASOURCES_TEST_PASSWORD';" mysql
    - mysql -h $DATASOURCES_DEFAULT_HOST -u root -p$MYSQL_ROOT_PASSWORD -e "GRANT ALL ON *.* to $DATASOURCES_TEST_USERNAME;" mysql

.mariadb-template:
  services:
    - name: $DATABASE_ENGINE_VERSION
      command:
        - /bin/bash
        - -c
        - |
          mount -t tmpfs -o size=1024m tmpfs /var/lib/mysql
          docker-entrypoint.sh mariadbd --default-authentication-plugin=mysql_native_password --log-bin-trust-function-creators=1
  # MySQL services variables
  variables:
    MARIADB_USER: user
    MARIADB_PASSWORD: testing-password
    MARIADB_ROOT_PASSWORD: testing-password2
    MARIADB_DATABASE: test
    DATASOURCES_DEFAULT_DATABASE: non_existing_database # to ensure that all tests run on the test datasource
    DATASOURCES_DEFAULT_USERNAME: $MARIADB_USER
    DATASOURCES_DEFAULT_PASSWORD: $MARIADB_PASSWORD
    DATASOURCES_DEFAULT_HOST: 127.0.0.1
    DATASOURCES_TEST_DATABASE: $MARIADB_DATABASE
    DATASOURCES_TEST_USERNAME: $MARIADB_USER
    DATASOURCES_TEST_PASSWORD: $MARIADB_PASSWORD
    DATASOURCES_TEST_HOST: 127.0.0.1
  before_script:
    - mariadb --version
    - while ! mariadb-admin -u root -h $DATASOURCES_DEFAULT_HOST -p$MARIADB_ROOT_PASSWORD ping; do sleep 1; done
    - mariadb -h $DATASOURCES_DEFAULT_HOST -u root -p$MARIADB_ROOT_PASSWORD -e "ALTER USER '$DATASOURCES_TEST_USERNAME'@'%' identified by '$DATASOURCES_TEST_PASSWORD';" mysql
    - mariadb -h $DATASOURCES_DEFAULT_HOST -u root -p$MARIADB_ROOT_PASSWORD -e "GRANT ALL ON *.* to $DATASOURCES_TEST_USERNAME;" mysql

.postgres-template:
  services:
    - $DATABASE_ENGINE_VERSION # should be DATABASE_ENGINE_VERSION
  # Postgres services variables
  variables:
    POSTGRES_DB: test
    POSTGRES_USER: user
    POSTGRES_PASSWORD: testing-password
    POSTGRES_HOST_AUTH_METHOD: trust
    DATASOURCES_DEFAULT_DATABASE: $POSTGRES_DB
    DATASOURCES_DEFAULT_USERNAME: $POSTGRES_USER
    DATASOURCES_DEFAULT_PASSWORD: $POSTGRES_PASSWORD
    DATASOURCES_DEFAULT_HOST: postgres
    DATASOURCES_TEST_DATABASE: $POSTGRES_DB
    DATASOURCES_TEST_USERNAME: $POSTGRES_USER
    DATASOURCES_TEST_PASSWORD: $POSTGRES_PASSWORD
    DATASOURCES_TEST_HOST: 127.0.0.1
    DATASOURCES_DRIVER: Cake\Database\Driver\Postgres
    DATASOURCES_TEST_DRIVER: Cake\Database\Driver\Postgres
    DATASOURCES_DEFAULT_DRIVER: Cake\Database\Driver\Postgres
    DATASOURCES_PORT: 5432
    DATASOURCES_DEFAULT_PORT: 5432
    DATASOURCES_DEFAULT_ENCODING: "utf8"
    DATASOURCES_TEST_ENCODING: "utf8"
    DATASOURCES_TEST_PORT: 5432
# TO BE REPLACED WITH
#  before_script:
#    - apt-get update
#    - apt-get install libpq-dev postgresql-client -yqq
#    - docker-php-ext-install pdo_pgsql
#    # official way to provide password to psql: http://www.postgresql.org/docs/9.3/static/libpq-envars.html
#    - export PGPASSWORD=$POSTGRES_PASSWORD
#    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"
#    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"

.test-template:
  stage: unit-test
  variables:
    # Passbolt unit test job common variables
    DEBUG: "true"
    PASSBOLT_GPG_SERVER_KEY_PUBLIC: config/gpg/unsecure.key
    PASSBOLT_GPG_SERVER_KEY_PRIVATE: config/gpg/unsecure_private.key
    APP_FULL_BASE_URL: http://127.0.0.1
    PASSBOLT_REGISTRATION_PUBLIC: 1
    PASSBOLT_SELENIUM_ACTIVE: 1
    # This is the development dummy fingerprint
    PASSBOLT_GPG_SERVER_KEY_FINGERPRINT: 2FC8945833C51946E937F9FED47B0811573EE67E
    PHPUNIT_COMMAND: vendor/bin/phpunit --log-junit unitreport.xml
    COMPOSER_ALLOW_SUPERUSER: 1
  image: $CI_REGISTRY_IMAGE_TEST:$PHP_VERSION
  script:
    - cp config/app.default.php config/app.php
    - composer install --no-interaction
    - gpg --import config/gpg/unsecure_private.key
    - gpg --import config/gpg/unsecure.key
    - ./bin/cake passbolt create_jwt_keys
    - $PHPUNIT_COMMAND
  artifacts:
    reports:
      junit: unitreport.xml
  rules:
    - if: "$CI_COMMIT_MESSAGE !~ /skip-unit/"

##
## CUSTOM COMBINATIONS
##
seq-php8.2-mysql5.7:
  variables:
    PHP_VERSION: "8.2"
    DATABASE_ENGINE_VERSION: "${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/mysql:5.7"
  extends:
    - .mysql-template
    - .test-template
  rules:
    - if: "$TEST_DISABLED == null"

#seq-php7.4-postgres12.11:
#  variables:
#    PHP_VERSION: "7.4"
#    DATABASE_ENGINE_VERSION: "${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/postgres:12-alpine"
#  extends:
#    - .postgres-template
#    - .test-template
#  rules:
#    - if: '$TEST_DISABLED == null'

##
## DEBIAN COMBINATIONS
##

#seq-php7.4-postgres11.16:
#  variables:
#    PHP_VERSION: "7.4"
#    DATABASE_ENGINE_VERSION: "${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/postgres:11-alpine"
#  extends:
#    - .postgres-template
#    - .test-template
#  rules:
#    - if: '$TEST_DISABLED == null'

## DEBIAN 11 BULLSEYE
seq-php8.2-mariadb10.5:
  variables:
    PHP_VERSION: "8.2"
    DATABASE_ENGINE_VERSION: "${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/mariadb:10.5"
  extends:
    - .mysql-template
    - .test-template
  allow_failure: true
  rules:
    - if: '$TEST_DISABLED == null && $CI_COMMIT_BRANCH == "master"'
    - if: '$TEST_DISABLED == null && $CI_COMMIT_BRANCH == "develop"'

#seq-php7.4-postgres13.7:
#  variables:
#    PHP_VERSION: "7.4"
#    DATABASE_ENGINE_VERSION: "${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/postgres:13-alpine"
#  extends:
#    - .postgres-template
#    - .test-template
#  rules:
#    - if: '$TEST_DISABLED == null && $CI_COMMIT_BRANCH == "master"'
#    - if: '$TEST_DISABLED == null && $CI_COMMIT_BRANCH == "develop"'

#seq-php7.4-postgres12.11:
#  variables:
#    PHP_VERSION: "7.4"
#    DATABASE_ENGINE_VERSION: '${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/postgres:12-alpine'
#  extends:
#    - .postgres-template
#    - .test-template
#  rules:
#    - if: '$TEST_DISABLED == null'

## UBUNTU 22.04 LTS JAMMY
seq-php8.2-mysql8:
  variables:
    PHP_VERSION: "8.2"
    DATABASE_ENGINE_VERSION: "${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/mysql:8.0"
  extends:
    - .mysql-template
    - .test-template
  rules:
    - if: '$TEST_DISABLED == null && $CI_COMMIT_BRANCH == "master"'
    - if: '$TEST_DISABLED == null && $CI_COMMIT_BRANCH == "develop"'

##
## RPM COMBINATIONS
##
## CENTOS 7 - with remi and mariadb repos
seq-php8.4-mariadb10.3:
  variables:
    PHP_VERSION: "8.4"
    DATABASE_ENGINE_VERSION: "${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/mariadb:10.3"
  extends:
    - .mysql-template
    - .test-template
  rules:
    - if: "$TEST_DISABLED == null"

#seq-php8.0-postgres13.7:
#  variables:
#    PHP_VERSION: "8.0"
#    DATABASE_ENGINE_VERSION: '${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/postgres:13-alpine'
#  extends:
#    - .postgres-template
#    - .test-template
#  rules:
#    - if: '$TEST_DISABLED == null && $CI_COMMIT_BRANCH == "master"'
#    - if: '$TEST_DISABLED == null && $CI_COMMIT_BRANCH == "develop"'

seq-php8.2-postgres15:
  variables:
    PHP_VERSION: "8.2"
    DATABASE_ENGINE_VERSION: "${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/postgres:15-alpine"
  extends:
    - .postgres-template
    - .test-template

seq-php8.3-mariadb10.5:
  variables:
    PHP_VERSION: "8.3"
    DATABASE_ENGINE_VERSION: "${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/mariadb:10.5"
  extends:
    - .mysql-template
    - .test-template
  rules:
    - if: "$TEST_DISABLED == null"

seq-php8.3-postgres13:
  variables:
    PHP_VERSION: "8.3"
    DATABASE_ENGINE_VERSION: "${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/postgres:13-alpine"
  extends:
    - .postgres-template
    - .test-template
  rules:
    - if: '$TEST_DISABLED == null && $CI_COMMIT_BRANCH == "master"'
    - if: '$TEST_DISABLED == null && $CI_COMMIT_BRANCH == "develop"'

# Mariadb 11.5 tests

# This is what we ship with the docker image as of 14 Nov 2024
seq-php8.2-mariadb11.5:
  variables:
    PHP_VERSION: "8.2"
    DATABASE_ENGINE_VERSION: "${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/mariadb:11.5"
  extends:
    - .mariadb-template
    - .test-template
  rules:
    - if: "$TEST_DISABLED == null"
  allow_failure: true

seq-php8.3-mariadb11.5:
  variables:
    PHP_VERSION: "8.3"
    DATABASE_ENGINE_VERSION: "${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/mariadb:11.5"
  extends:
    - .mariadb-template
    - .test-template
  rules:
      - if: '$TEST_DISABLED == null && $CI_COMMIT_BRANCH == "master"'
      - if: '$TEST_DISABLED == null && $CI_COMMIT_BRANCH == "develop"'
      - if: '$TEST_DISABLED == null && $CI_COMMIT_BRANCH == "release"'
  allow_failure: true
